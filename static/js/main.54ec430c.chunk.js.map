{"version":3,"sources":["PhotoContainer/Photo.js","PhotoContainer/DatePicker.js","PhotoContainer/Description.js","PhotoContainer/Controls.js","PhotoContainer/PhotoContainer.js","App.js","index.js"],"names":["Photo","props","react_default","a","createElement","src","alt","title","DatePicker","htmlFor","id","type","onClick","function","Description","className","date","PhotoContainer_DatePicker","pickerFunction","desc","href","hd","Controls","direction","PhotoContainer","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","setDate","useEffect","axios","get","then","response","concat","catch","console","log","formatDate","inputDate","dateString","toLocaleDateString","year","month","day","slice","PhotoContainer_Controls","currentDate","Date","getDate","minimumDate","dayMatch","monthMatch","getMonth","yearMatch","getFullYear","PhotoContainer_Photo","url","presentDate","PhotoContainer_Description","explanation","hdurl","event","preventDefault","document","querySelector","value","App","Fragment","src_PhotoContainer_PhotoContainer","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.54ec430c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Photo = (props) => {\r\n    return(\r\n        <img src={props.src} alt={props.title} title={props.title} />\r\n    )\r\n}\r\n\r\nexport default Photo;","import React from 'react';\r\n\r\nconst DatePicker = (props) => {\r\n  return (  \r\n    <form>\r\n        <label htmlFor='datepicker'>Choose another date:</label>\r\n        <input id='datepicker' type='date'/>\r\n        <button onClick={props.function}>Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default DatePicker;","import React from 'react';\r\nimport DatePicker from './DatePicker';\r\n\r\nconst Description = (props) => {\r\n    return (\r\n        <section className='description'>\r\n            <p className='date'>Photo of the day for {props.date}</p>\r\n            <DatePicker function={props.pickerFunction} />\r\n            <p className='description-text'>{props.desc}</p>\r\n            <p className='hd-link'>View HD version <a href={props.hd}>here</a></p>\r\n        </section>\r\n    )\r\n} \r\n\r\nexport default Description;","import React from 'react';\r\n\r\nconst Controls = (props) => {\r\n    return (\r\n        <button className={props.direction} onClick={props.function}>\r\n            Go to {props.direction} picture\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Controls;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Photo from './Photo'\r\nimport Description from './Description';\r\nimport Controls from './Controls';\r\n\r\nconst PhotoContainer = (props) => {\r\n    const [data, setData] = useState({});\r\n    const [date, setDate] = useState('');\r\n    // Get current date in correct format using API call\r\n    useEffect(() => {\r\n        axios.get(`https://api.nasa.gov/planetary/apod?api_key=Ka3skeqen91igEUbNUDEzw6m3639xJhqlBxlGhyu`)\r\n            .then(response => setDate(response.data.date))\r\n    }, [])\r\n    // Get data for photo at 'date'\r\n    useEffect(() => {\r\n        axios.get(`https://api.nasa.gov/planetary/apod?api_key=Ka3skeqen91igEUbNUDEzw6m3639xJhqlBxlGhyu&date=${date}`)\r\n            .then(response => setData(response.data))\r\n            .catch(response => console.log(response))\r\n    }, [date]);\r\n    // Function for formatting date for API \r\n    const formatDate = (inputDate) => {\r\n        const dateString= inputDate.toLocaleDateString('en-us', {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n        return (dateString.slice(6) + '-' + dateString.slice(0, 2) + '-' + dateString.slice(3, 5))\r\n    }\r\n    // Function for left and right date pickers\r\n    const nextDate = () => {\r\n        // For some reason when converting the dates, it converts to the day before the current day\r\n        let currentDate = new Date(date);\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n        // Store today's date for equality checking\r\n        const presentDate = new Date();\r\n        // Make sure that the button does not let you go past the present day\r\n        const dayMatch = (currentDate.getDate() === presentDate.getDate());\r\n        const monthMatch = (currentDate.getMonth() === presentDate.getMonth());\r\n        const yearMatch = (currentDate.getFullYear() === presentDate.getFullYear());\r\n        if (dayMatch && monthMatch && yearMatch) {\r\n            console.log('You cannot choose a day after today\\'s date!')\r\n        } else {\r\n            currentDate.setDate(currentDate.getDate() + 1)\r\n            setDate(formatDate(currentDate));\r\n        }\r\n    }\r\n    const prevDate = () => {\r\n        // For some reason when converting the dates, it converts to the day before the current day\r\n        let currentDate = new Date(date);\r\n        currentDate.setDate(currentDate.getDate() + 1);\r\n        // Set minimum date - the API lists this as June 16, 1995 but testing shows errors occuring at \r\n        // dates before June 20, 1995 so I'm setting that as the minimum instead\r\n        const minimumDate = new Date('1995-06-20');\r\n        // Make sure that the date cannot go below the minimum date\r\n        const dayMatch = (currentDate.getDate() === minimumDate.getDate());\r\n        const monthMatch = (currentDate.getMonth() === minimumDate.getMonth());\r\n        const yearMatch = (currentDate.getFullYear() === minimumDate.getFullYear());\r\n        if (dayMatch && monthMatch && yearMatch) {\r\n            console.log('You cannot choose a day before June 20th, 1995!')\r\n        } else {\r\n            currentDate.setDate(currentDate.getDate() - 1)\r\n            setDate(formatDate(currentDate));\r\n        }\r\n    }\r\n    // Function for datepicker \r\n    const dateChange = (event) => {\r\n        event.preventDefault();\r\n        setDate(document.querySelector('#datepicker').value)\r\n    }\r\n    return(\r\n        <section className='photo-container'>\r\n            <Controls function={prevDate} direction='last' />\r\n            <Photo src={data.url} title={data.title} />\r\n            <Controls function={nextDate} direction='next' />\r\n            <Description date={data.date} desc={data.explanation} hd={data.hdurl} pickerFunction={dateChange} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PhotoContainer;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport PhotoContainer from './PhotoContainer/PhotoContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <PhotoContainer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}